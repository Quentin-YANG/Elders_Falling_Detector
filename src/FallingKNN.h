#include <StandardCplusplus.h>
using namespace std;

#ifndef _FALLINGKNN_H_
#define _FALLINGKNN_H_

#include <vector>
#include <cmath>
#include <algorithm>
#include <avr/pgmspace.h>

// Depends on library
#define COL_NUM 3
#define ROW_NUM 182

//To store <label,distance>
typedef pair<char,double> DisPair;
//how many time per label appears
typedef pair<char,int8_t> FreqPair;      
const PROGMEM int16_t lib[ROW_NUM][COL_NUM + 1] =
            {
                    {-32768,5112,-32768,'F'},
                    {32767,9164,-11544,'F'},
                    {32767,-17420,-32768,'F'},
                    {30624,-24736,-32768,'F'},
                    {32767,19520,32767,'F'},
                    {-17972,32767,-32768,'F'},
                    {-32768,4,-23880,'F'},
                    {10124,-8264,-32768,'F'},
                    {288,-13676,-32768,'F'},
                    {-32692,10904,-32768,'F'},
                    {25944,-32768,-32768,'F'},
                    {32767,-18724,-25428,'F'},
                    {32767,-5644,4512,'F'},
                    {-32768,-32768,32767,'F'},
                    {10244,-21428,-32768,'F'},
                    {-32768,-32768,32767,'F'},
                    {-7520,-32768,26616,'F'},
                    {-7520,-32768,26616,'F'},
                    {-29116,-32768,32767,'F'},
                    {-32768,-16772,-32768,'F'},
                    {-32768,-32768,-32768,'F'},
                    {-32768,6916,-32768,'F'},
                    {-32348,-13648,-32768,'F'},
                    {-32768,32767,-32768,'F'},
                    {-32768,32767,-32768,'F'},
                    {32767,-20528,-32768,'F'},
                    {-27864,-32768,-32768,'F'},
                    {-32768,-32768,-26932,'F'},
                    {-32768,-31304,-32768,'F'},
                    {-32768,-24520,-32768,'F'},
                    {-32768,-32768,-32768,'F'},
                    {32767,-32768,-32768,'F'},
                    {-32768,-32768,-32768,'F'},
                    {-32768,-32768,-32768,'F'},
                    {-23204,-32768,-32768,'F'},
                    {-32768,-32768,-32768,'F'},
                    {-32768,-30380,-32768,'F'},
                    {12436,-32768,-32768,'F'},
                    {-32768,-23820,-31080,'F'},
                    {30144,31180,32767,'F'},
                    {32767,-32768,-32768,'F'},
                    {29864,-13564,-32768,'F'},
                    {32767,30532,-24828,'F'},
                    {32767,32767,-23076,'F'},
                    {32767,32767,-32768,'F'},
                    {32767,-748,29596,'F'},
                    {28304,32767,32767,'F'},
                    {32767,32767,-32768,'F'},
                    {30520,32767,-32768,'F'},
                    {30724,18568,10188,'F'},
                    {32767,-27592,1972,'F'},
                    {32767,-23820,14612,'F'},
                    {32767,32767,27292,'F'},
                    {32767,32767,16768,'F'},
                    {32767,32767,32767,'F'},
                    {32767,15516,32767,'F'},
                    {-32768,32767,-32768,'F'},
                    {30724,18568,10188,'F'},
                    {18192,32767,32767,'F'},
                    {32767,32767,32767,'F'},
                    {-32768,32767,-32768,'F'},
                    {26144,32767,32767,'F'},
                    {-25636,32767,-32768,'F'},
                    {-32768,27512,-32768,'F'},
                    {-32768,32767,-32768,'F'},
                    {32767,32767,32767,'F'},
                    {32767,32767,28616,'F'},
                    {-25424,32767,31896,'F'},
                    {-32768,32767,32767,'F'},
                    {32767,32767,32767,'F'},
                    {28520,19844,10480,'F'},
                    {32767,32767,-32768,'F'},
                    {32767,32767,-26128,'F'},
                    {32767,32767,-29124,'F'},
                    {-32768,32767,32767,'F'},
                    {32767,32767,-32768,'F'},
                    {32767,32767,5280,'F'},
                    {-32768,32767,-32768,'F'},
                    {32767,32767,5752,'F'},
                    {-32768,32767,-32768,'F'},
                    {32767,32767,32767,'F'},
                    {32136,27608,32767,'F'},
                    {32767,32767,-23396,'F'},
                    {32767,-30368,32767,'F'},
                    {32767,20676,28468,'F'},
                    {32767,-17528,32767,'F'},
                    {32767,-27288,-29280,'F'},
                    {5864,628,-25384,'S'},
                    {5484,1984,-26220,'S'},
                    {12600,-10824,-20460,'S'},
                    {29612,-32768,32767,'S'},
                    {10612,-6972,-22660,'S'},
                    {12232,-8548,-22364,'S'},
                    {9260,1964,-29552,'S'},
                    {10560,-9864,-23584,'S'},
                    {14344,-13664,-21760,'S'},
                    {13712,-9064,-25748,'S'},
                    {10672,-8384,-23748,'S'},
                    {12860,-11328,-25804,'S'},
                    {12992,-11740,-21744,'S'},
                    {13972,-15092,-18456,'S'},
                    {8668,-8704,-22720,'S'},
                    {4648,4072,-32768,'S'},
                    {-116,16532,-23812,'S'},
                    {13088,-9964,-20456,'S'},
                    {8960,-1284,-32768,'S'},
                    {14896,-12972,-17924,'S'},
                    {19708,4876,7848,'S'},
                    {11480,4820,15712,'S'},
                    {18160,7804,12864,'S'},
                    {17928,5924,13488,'S'},
                    {8224,5040,19548,'S'},
                    {11104,4160,15292,'S'},
                    {14288,4264,13616,'S'},
                    {20624,8576,15888,'S'},
                    {16180,5608,13628,'S'},
                    {8952,6204,20880,'S'},
                    {14840,2036,16740,'S'},
                    {21676,10116,8800,'S'},
                    {32767,9464,10996,'S'},
                    {32767,15132,28316,'S'},
                    {23484,7196,12624,'S'},
                    {19660,9136,32767,'S'},
                    {-32768,-32768,32767,'S'},
                    {21268,5768,6576,'S'},
                    {15980,6360,15248,'S'},
                    {15324,3292,18144,'S'},
                    {28276,16448,14832,'S'},
                    {22228,7100,19796,'S'},
                    {10280,4288,15148,'S'},
                    {13852,5288,17548,'S'},
                    {13164,3284,18164,'S'},
                    {-216,11672,15252,'B'},
                    {3524,15364,-17888,'B'},
                    {248,22796,3476,'B'},
                    {1456,22560,7376,'B'},
                    {1032,16280,7800,'B'},
                    {-1536,19340,10504,'B'},
                    {3024,17500,9140,'B'},
                    {416,15652,11156,'B'},
                    {908,17892,11104,'B'},
                    {116,13116,12560,'B'},
                    {1048,13472,11816,'B'},
                    {648,12128,14440,'B'},
                    {-368,12536,11628,'B'},
                    {-524,12748,13880,'B'},
                    {288,12324,12856,'B'},
                    {1720,12868,11432,'B'},
                    {328,17312,12212,'B'},
                    {284,13632,11968,'B'},
                    {-3100,4088,17192,'B'},
                    {-1556,7128,16448,'B'},
                    {384,31916,10620,'B'},
                    {-2048,32767,22708,'B'},
                    {-1044,24196,6152,'B'},
                    {552,21096,5912,'B'},
                    {-128,24536,7412,'B'},
                    {20988,2092,6624,'W'},
                    {30604,10228,23664,'W'},
                    {25492,7868,14236,'W'},
                    {25964,10340,12420,'W'},
                    {32252,12580,18252,'W'},
                    {32767,13984,28588,'W'},
                    {19176,6532,24440,'W'},
                    {19624,3984,15080,'W'},
                    {24828,6600,18976,'W'},
                    {28328,14664,22804,'W'},
                    {16764,16440,14684,'W'},
                    {21576,7072,4528,'W'},
                    {16764,16440,14684,'W'},
                    {32767,23524,32767,'W'},
                    {16504,8260,13204,'W'},
                    {32767,11732,22976,'W'},
                    {14460,13304,8196,'W'},
                    {19932,8768,8160,'W'},
                    {18368,9656,9092,'W'},
                    {7840,10296,16968,'W'},
                    {17460,10264,6200,'W'},
                    {20856,8664,14688,'W'},
                    {24764,9512,18096,'W'},
                    {16252,6324,11904,'W'},
                    {18752,10532,32767,'W'},
            };
            
class FallingKNN {
private:
    int16_t testData[COL_NUM];
    vector<DisPair> dis_lib;
    vector<FreqPair> label_freq; // vector contains
    bool isUnique = true;
    double get_distance(int16_t d1[], int16_t d2[]);


public:
    int8_t k = 5;
    
    void get_all_distance(int16_t ax,int16_t ay,int16_t az);
    char get_max_freq_label();
    void dis_sort();
    char get_label(int16_t, int16_t, int16_t);
    struct CmpByDis {
        bool operator()(const DisPair &lhs, const DisPair &rhs) {
            return lhs.second < rhs.second;
        };
    };   
    struct CmpByFreq {
        bool operator()(const FreqPair &lhs, const FreqPair &rhs) {
            return lhs.second > rhs.second;
        };
    };
};
#endif /* _FALLINGKNN_H_ */
